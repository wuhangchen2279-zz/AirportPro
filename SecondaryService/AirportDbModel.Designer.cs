//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AirportDbModel", "FK_flights_airlineid", "airlines", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseBackupService.airline), "flights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseBackupService.flight), true)]
[assembly: EdmRelationshipAttribute("AirportDbModel", "FK_orders_flightid", "flights", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseBackupService.flight), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseBackupService.order), true)]
[assembly: EdmRelationshipAttribute("AirportDbModel", "FK_seats_flightid", "flights", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseBackupService.flight), "seats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseBackupService.seat), true)]
[assembly: EdmRelationshipAttribute("AirportDbModel", "FK_orders_userid", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseBackupService.user), "orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseBackupService.order), true)]

#endregion

namespace DatabaseBackupService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AirportDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AirportDbEntities object using the connection string found in the 'AirportDbEntities' section of the application configuration file.
        /// </summary>
        public AirportDbEntities() : base("name=AirportDbEntities", "AirportDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AirportDbEntities object.
        /// </summary>
        public AirportDbEntities(string connectionString) : base(connectionString, "AirportDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AirportDbEntities object.
        /// </summary>
        public AirportDbEntities(EntityConnection connection) : base(connection, "AirportDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<airline> airlines
        {
            get
            {
                if ((_airlines == null))
                {
                    _airlines = base.CreateObjectSet<airline>("airlines");
                }
                return _airlines;
            }
        }
        private ObjectSet<airline> _airlines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<flight> flights
        {
            get
            {
                if ((_flights == null))
                {
                    _flights = base.CreateObjectSet<flight>("flights");
                }
                return _flights;
            }
        }
        private ObjectSet<flight> _flights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<order> orders
        {
            get
            {
                if ((_orders == null))
                {
                    _orders = base.CreateObjectSet<order>("orders");
                }
                return _orders;
            }
        }
        private ObjectSet<order> _orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<seat> seats
        {
            get
            {
                if ((_seats == null))
                {
                    _seats = base.CreateObjectSet<seat>("seats");
                }
                return _seats;
            }
        }
        private ObjectSet<seat> _seats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<viewflight> viewflights
        {
            get
            {
                if ((_viewflights == null))
                {
                    _viewflights = base.CreateObjectSet<viewflight>("viewflights");
                }
                return _viewflights;
            }
        }
        private ObjectSet<viewflight> _viewflights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vieworder> vieworders
        {
            get
            {
                if ((_vieworders == null))
                {
                    _vieworders = base.CreateObjectSet<vieworder>("vieworders");
                }
                return _vieworders;
            }
        }
        private ObjectSet<vieworder> _vieworders;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the airlines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToairlines(airline airline)
        {
            base.AddObject("airlines", airline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the flights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToflights(flight flight)
        {
            base.AddObject("flights", flight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorders(order order)
        {
            base.AddObject("orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the seats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToseats(seat seat)
        {
            base.AddObject("seats", seat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the viewflights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToviewflights(viewflight viewflight)
        {
            base.AddObject("viewflights", viewflight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vieworders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovieworders(vieworder vieworder)
        {
            base.AddObject("vieworders", vieworder);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="airline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class airline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new airline object.
        /// </summary>
        /// <param name="airlineId">Initial value of the AirlineId property.</param>
        /// <param name="airlineName">Initial value of the AirlineName property.</param>
        public static airline Createairline(global::System.String airlineId, global::System.String airlineName)
        {
            airline airline = new airline();
            airline.AirlineId = airlineId;
            airline.AirlineName = airlineName;
            return airline;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineId
        {
            get
            {
                return _AirlineId;
            }
            set
            {
                if (_AirlineId != value)
                {
                    OnAirlineIdChanging(value);
                    ReportPropertyChanging("AirlineId");
                    _AirlineId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AirlineId");
                    OnAirlineIdChanged();
                }
            }
        }
        private global::System.String _AirlineId;
        partial void OnAirlineIdChanging(global::System.String value);
        partial void OnAirlineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineName
        {
            get
            {
                return _AirlineName;
            }
            set
            {
                OnAirlineNameChanging(value);
                ReportPropertyChanging("AirlineName");
                _AirlineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AirlineName");
                OnAirlineNameChanged();
            }
        }
        private global::System.String _AirlineName;
        partial void OnAirlineNameChanging(global::System.String value);
        partial void OnAirlineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookingPhone
        {
            get
            {
                return _BookingPhone;
            }
            set
            {
                OnBookingPhoneChanging(value);
                ReportPropertyChanging("BookingPhone");
                _BookingPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookingPhone");
                OnBookingPhoneChanged();
            }
        }
        private global::System.String _BookingPhone;
        partial void OnBookingPhoneChanging(global::System.String value);
        partial void OnBookingPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_flights_airlineid", "flights")]
        public EntityCollection<flight> flights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<flight>("AirportDbModel.FK_flights_airlineid", "flights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<flight>("AirportDbModel.FK_flights_airlineid", "flights", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="flight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class flight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new flight object.
        /// </summary>
        /// <param name="flightId">Initial value of the FlightId property.</param>
        /// <param name="airlineId">Initial value of the AirlineId property.</param>
        /// <param name="departTime">Initial value of the DepartTime property.</param>
        /// <param name="arriveTime">Initial value of the ArriveTime property.</param>
        /// <param name="origin">Initial value of the Origin property.</param>
        /// <param name="destination">Initial value of the Destination property.</param>
        public static flight Createflight(global::System.String flightId, global::System.String airlineId, global::System.DateTime departTime, global::System.DateTime arriveTime, global::System.String origin, global::System.String destination)
        {
            flight flight = new flight();
            flight.FlightId = flightId;
            flight.AirlineId = airlineId;
            flight.DepartTime = departTime;
            flight.ArriveTime = arriveTime;
            flight.Origin = origin;
            flight.Destination = destination;
            return flight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightId
        {
            get
            {
                return _FlightId;
            }
            set
            {
                if (_FlightId != value)
                {
                    OnFlightIdChanging(value);
                    ReportPropertyChanging("FlightId");
                    _FlightId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FlightId");
                    OnFlightIdChanged();
                }
            }
        }
        private global::System.String _FlightId;
        partial void OnFlightIdChanging(global::System.String value);
        partial void OnFlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineId
        {
            get
            {
                return _AirlineId;
            }
            set
            {
                OnAirlineIdChanging(value);
                ReportPropertyChanging("AirlineId");
                _AirlineId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AirlineId");
                OnAirlineIdChanged();
            }
        }
        private global::System.String _AirlineId;
        partial void OnAirlineIdChanging(global::System.String value);
        partial void OnAirlineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartTime
        {
            get
            {
                return _DepartTime;
            }
            set
            {
                OnDepartTimeChanging(value);
                ReportPropertyChanging("DepartTime");
                _DepartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartTime");
                OnDepartTimeChanged();
            }
        }
        private global::System.DateTime _DepartTime;
        partial void OnDepartTimeChanging(global::System.DateTime value);
        partial void OnDepartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArriveTime
        {
            get
            {
                return _ArriveTime;
            }
            set
            {
                OnArriveTimeChanging(value);
                ReportPropertyChanging("ArriveTime");
                _ArriveTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArriveTime");
                OnArriveTimeChanged();
            }
        }
        private global::System.DateTime _ArriveTime;
        partial void OnArriveTimeChanging(global::System.DateTime value);
        partial void OnArriveTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Origin
        {
            get
            {
                return _Origin;
            }
            set
            {
                OnOriginChanging(value);
                ReportPropertyChanging("Origin");
                _Origin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Origin");
                OnOriginChanged();
            }
        }
        private global::System.String _Origin;
        partial void OnOriginChanging(global::System.String value);
        partial void OnOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                OnDestinationChanging(value);
                ReportPropertyChanging("Destination");
                _Destination = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Destination");
                OnDestinationChanged();
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_flights_airlineid", "airlines")]
        public airline airline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<airline>("AirportDbModel.FK_flights_airlineid", "airlines").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<airline>("AirportDbModel.FK_flights_airlineid", "airlines").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<airline> airlineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<airline>("AirportDbModel.FK_flights_airlineid", "airlines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<airline>("AirportDbModel.FK_flights_airlineid", "airlines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_orders_flightid", "orders")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("AirportDbModel.FK_orders_flightid", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("AirportDbModel.FK_orders_flightid", "orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_seats_flightid", "seats")]
        public EntityCollection<seat> seats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<seat>("AirportDbModel.FK_seats_flightid", "seats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<seat>("AirportDbModel.FK_seats_flightid", "seats", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new order object.
        /// </summary>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="flightId">Initial value of the FlightId property.</param>
        /// <param name="seatCode">Initial value of the SeatCode property.</param>
        public static order Createorder(global::System.Int32 orderId, global::System.Int32 userId, global::System.DateTime orderDate, global::System.String flightId, global::System.String seatCode)
        {
            order order = new order();
            order.OrderId = orderId;
            order.UserId = userId;
            order.OrderDate = orderDate;
            order.FlightId = flightId;
            order.SeatCode = seatCode;
            return order;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightId
        {
            get
            {
                return _FlightId;
            }
            set
            {
                OnFlightIdChanging(value);
                ReportPropertyChanging("FlightId");
                _FlightId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlightId");
                OnFlightIdChanged();
            }
        }
        private global::System.String _FlightId;
        partial void OnFlightIdChanging(global::System.String value);
        partial void OnFlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatCode
        {
            get
            {
                return _SeatCode;
            }
            set
            {
                OnSeatCodeChanging(value);
                ReportPropertyChanging("SeatCode");
                _SeatCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatCode");
                OnSeatCodeChanged();
            }
        }
        private global::System.String _SeatCode;
        partial void OnSeatCodeChanging(global::System.String value);
        partial void OnSeatCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_orders_flightid", "flights")]
        public flight flight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_orders_flightid", "flights").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_orders_flightid", "flights").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<flight> flightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_orders_flightid", "flights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<flight>("AirportDbModel.FK_orders_flightid", "flights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_orders_userid", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("AirportDbModel.FK_orders_userid", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("AirportDbModel.FK_orders_userid", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("AirportDbModel.FK_orders_userid", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("AirportDbModel.FK_orders_userid", "users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="seat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class seat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new seat object.
        /// </summary>
        /// <param name="seatId">Initial value of the SeatId property.</param>
        /// <param name="seatCode">Initial value of the SeatCode property.</param>
        /// <param name="seatAvailable">Initial value of the SeatAvailable property.</param>
        /// <param name="flightId">Initial value of the FlightId property.</param>
        public static seat Createseat(global::System.Int32 seatId, global::System.String seatCode, global::System.String seatAvailable, global::System.String flightId)
        {
            seat seat = new seat();
            seat.SeatId = seatId;
            seat.SeatCode = seatCode;
            seat.SeatAvailable = seatAvailable;
            seat.FlightId = flightId;
            return seat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeatId
        {
            get
            {
                return _SeatId;
            }
            set
            {
                if (_SeatId != value)
                {
                    OnSeatIdChanging(value);
                    ReportPropertyChanging("SeatId");
                    _SeatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeatId");
                    OnSeatIdChanged();
                }
            }
        }
        private global::System.Int32 _SeatId;
        partial void OnSeatIdChanging(global::System.Int32 value);
        partial void OnSeatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatCode
        {
            get
            {
                return _SeatCode;
            }
            set
            {
                OnSeatCodeChanging(value);
                ReportPropertyChanging("SeatCode");
                _SeatCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatCode");
                OnSeatCodeChanged();
            }
        }
        private global::System.String _SeatCode;
        partial void OnSeatCodeChanging(global::System.String value);
        partial void OnSeatCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatAvailable
        {
            get
            {
                return _SeatAvailable;
            }
            set
            {
                OnSeatAvailableChanging(value);
                ReportPropertyChanging("SeatAvailable");
                _SeatAvailable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatAvailable");
                OnSeatAvailableChanged();
            }
        }
        private global::System.String _SeatAvailable;
        partial void OnSeatAvailableChanging(global::System.String value);
        partial void OnSeatAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightId
        {
            get
            {
                return _FlightId;
            }
            set
            {
                OnFlightIdChanging(value);
                ReportPropertyChanging("FlightId");
                _FlightId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlightId");
                OnFlightIdChanged();
            }
        }
        private global::System.String _FlightId;
        partial void OnFlightIdChanging(global::System.String value);
        partial void OnFlightIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_seats_flightid", "flights")]
        public flight flight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_seats_flightid", "flights").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_seats_flightid", "flights").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<flight> flightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<flight>("AirportDbModel.FK_seats_flightid", "flights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<flight>("AirportDbModel.FK_seats_flightid", "flights", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static user Createuser(global::System.Int32 userId, global::System.String userName, global::System.String role, global::System.String password)
        {
            user user = new user();
            user.UserId = userId;
            user.UserName = userName;
            user.Role = role;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AirportDbModel", "FK_orders_userid", "orders")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("AirportDbModel.FK_orders_userid", "orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("AirportDbModel.FK_orders_userid", "orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="viewflight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class viewflight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new viewflight object.
        /// </summary>
        /// <param name="flightId">Initial value of the FlightId property.</param>
        /// <param name="departTime">Initial value of the DepartTime property.</param>
        /// <param name="arriveTime">Initial value of the ArriveTime property.</param>
        /// <param name="origin">Initial value of the Origin property.</param>
        /// <param name="destination">Initial value of the Destination property.</param>
        /// <param name="airlineId">Initial value of the AirlineId property.</param>
        /// <param name="airlineName">Initial value of the AirlineName property.</param>
        public static viewflight Createviewflight(global::System.String flightId, global::System.DateTime departTime, global::System.DateTime arriveTime, global::System.String origin, global::System.String destination, global::System.String airlineId, global::System.String airlineName)
        {
            viewflight viewflight = new viewflight();
            viewflight.FlightId = flightId;
            viewflight.DepartTime = departTime;
            viewflight.ArriveTime = arriveTime;
            viewflight.Origin = origin;
            viewflight.Destination = destination;
            viewflight.AirlineId = airlineId;
            viewflight.AirlineName = airlineName;
            return viewflight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightId
        {
            get
            {
                return _FlightId;
            }
            set
            {
                if (_FlightId != value)
                {
                    OnFlightIdChanging(value);
                    ReportPropertyChanging("FlightId");
                    _FlightId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FlightId");
                    OnFlightIdChanged();
                }
            }
        }
        private global::System.String _FlightId;
        partial void OnFlightIdChanging(global::System.String value);
        partial void OnFlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartTime
        {
            get
            {
                return _DepartTime;
            }
            set
            {
                if (_DepartTime != value)
                {
                    OnDepartTimeChanging(value);
                    ReportPropertyChanging("DepartTime");
                    _DepartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartTime");
                    OnDepartTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartTime;
        partial void OnDepartTimeChanging(global::System.DateTime value);
        partial void OnDepartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArriveTime
        {
            get
            {
                return _ArriveTime;
            }
            set
            {
                if (_ArriveTime != value)
                {
                    OnArriveTimeChanging(value);
                    ReportPropertyChanging("ArriveTime");
                    _ArriveTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArriveTime");
                    OnArriveTimeChanged();
                }
            }
        }
        private global::System.DateTime _ArriveTime;
        partial void OnArriveTimeChanging(global::System.DateTime value);
        partial void OnArriveTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Origin
        {
            get
            {
                return _Origin;
            }
            set
            {
                if (_Origin != value)
                {
                    OnOriginChanging(value);
                    ReportPropertyChanging("Origin");
                    _Origin = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Origin");
                    OnOriginChanged();
                }
            }
        }
        private global::System.String _Origin;
        partial void OnOriginChanging(global::System.String value);
        partial void OnOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                if (_Destination != value)
                {
                    OnDestinationChanging(value);
                    ReportPropertyChanging("Destination");
                    _Destination = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Destination");
                    OnDestinationChanged();
                }
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineId
        {
            get
            {
                return _AirlineId;
            }
            set
            {
                if (_AirlineId != value)
                {
                    OnAirlineIdChanging(value);
                    ReportPropertyChanging("AirlineId");
                    _AirlineId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AirlineId");
                    OnAirlineIdChanged();
                }
            }
        }
        private global::System.String _AirlineId;
        partial void OnAirlineIdChanging(global::System.String value);
        partial void OnAirlineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineName
        {
            get
            {
                return _AirlineName;
            }
            set
            {
                if (_AirlineName != value)
                {
                    OnAirlineNameChanging(value);
                    ReportPropertyChanging("AirlineName");
                    _AirlineName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AirlineName");
                    OnAirlineNameChanged();
                }
            }
        }
        private global::System.String _AirlineName;
        partial void OnAirlineNameChanging(global::System.String value);
        partial void OnAirlineNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AirportDbModel", Name="vieworder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vieworder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vieworder object.
        /// </summary>
        /// <param name="airlineName">Initial value of the AirlineName property.</param>
        /// <param name="airlineId">Initial value of the AirlineId property.</param>
        /// <param name="departTime">Initial value of the DepartTime property.</param>
        /// <param name="arriveTime">Initial value of the ArriveTime property.</param>
        /// <param name="origin">Initial value of the Origin property.</param>
        /// <param name="destination">Initial value of the Destination property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="seatCode">Initial value of the SeatCode property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="flightId">Initial value of the FlightId property.</param>
        public static vieworder Createvieworder(global::System.String airlineName, global::System.String airlineId, global::System.DateTime departTime, global::System.DateTime arriveTime, global::System.String origin, global::System.String destination, global::System.Int32 orderId, global::System.Int32 userId, global::System.DateTime orderDate, global::System.String seatCode, global::System.String userName, global::System.String flightId)
        {
            vieworder vieworder = new vieworder();
            vieworder.AirlineName = airlineName;
            vieworder.AirlineId = airlineId;
            vieworder.DepartTime = departTime;
            vieworder.ArriveTime = arriveTime;
            vieworder.Origin = origin;
            vieworder.Destination = destination;
            vieworder.OrderId = orderId;
            vieworder.UserId = userId;
            vieworder.OrderDate = orderDate;
            vieworder.SeatCode = seatCode;
            vieworder.UserName = userName;
            vieworder.FlightId = flightId;
            return vieworder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineName
        {
            get
            {
                return _AirlineName;
            }
            set
            {
                if (_AirlineName != value)
                {
                    OnAirlineNameChanging(value);
                    ReportPropertyChanging("AirlineName");
                    _AirlineName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AirlineName");
                    OnAirlineNameChanged();
                }
            }
        }
        private global::System.String _AirlineName;
        partial void OnAirlineNameChanging(global::System.String value);
        partial void OnAirlineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AirlineId
        {
            get
            {
                return _AirlineId;
            }
            set
            {
                if (_AirlineId != value)
                {
                    OnAirlineIdChanging(value);
                    ReportPropertyChanging("AirlineId");
                    _AirlineId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AirlineId");
                    OnAirlineIdChanged();
                }
            }
        }
        private global::System.String _AirlineId;
        partial void OnAirlineIdChanging(global::System.String value);
        partial void OnAirlineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartTime
        {
            get
            {
                return _DepartTime;
            }
            set
            {
                if (_DepartTime != value)
                {
                    OnDepartTimeChanging(value);
                    ReportPropertyChanging("DepartTime");
                    _DepartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartTime");
                    OnDepartTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartTime;
        partial void OnDepartTimeChanging(global::System.DateTime value);
        partial void OnDepartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArriveTime
        {
            get
            {
                return _ArriveTime;
            }
            set
            {
                if (_ArriveTime != value)
                {
                    OnArriveTimeChanging(value);
                    ReportPropertyChanging("ArriveTime");
                    _ArriveTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArriveTime");
                    OnArriveTimeChanged();
                }
            }
        }
        private global::System.DateTime _ArriveTime;
        partial void OnArriveTimeChanging(global::System.DateTime value);
        partial void OnArriveTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Origin
        {
            get
            {
                return _Origin;
            }
            set
            {
                if (_Origin != value)
                {
                    OnOriginChanging(value);
                    ReportPropertyChanging("Origin");
                    _Origin = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Origin");
                    OnOriginChanged();
                }
            }
        }
        private global::System.String _Origin;
        partial void OnOriginChanging(global::System.String value);
        partial void OnOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                if (_Destination != value)
                {
                    OnDestinationChanging(value);
                    ReportPropertyChanging("Destination");
                    _Destination = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Destination");
                    OnDestinationChanged();
                }
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                if (_OrderDate != value)
                {
                    OnOrderDateChanging(value);
                    ReportPropertyChanging("OrderDate");
                    _OrderDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderDate");
                    OnOrderDateChanged();
                }
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatCode
        {
            get
            {
                return _SeatCode;
            }
            set
            {
                if (_SeatCode != value)
                {
                    OnSeatCodeChanging(value);
                    ReportPropertyChanging("SeatCode");
                    _SeatCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SeatCode");
                    OnSeatCodeChanged();
                }
            }
        }
        private global::System.String _SeatCode;
        partial void OnSeatCodeChanging(global::System.String value);
        partial void OnSeatCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightId
        {
            get
            {
                return _FlightId;
            }
            set
            {
                if (_FlightId != value)
                {
                    OnFlightIdChanging(value);
                    ReportPropertyChanging("FlightId");
                    _FlightId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FlightId");
                    OnFlightIdChanged();
                }
            }
        }
        private global::System.String _FlightId;
        partial void OnFlightIdChanging(global::System.String value);
        partial void OnFlightIdChanged();

        #endregion

    
    }

    #endregion

    
}
